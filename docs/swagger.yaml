basePath: /api/v1
definitions:
  controllers.category:
    properties:
      name:
        example: electronics
        type: string
    type: object
  controllers.errorResponse:
    properties:
      message:
        example: category already exists
        type: string
      success:
        example: false
        type: boolean
    type: object
  controllers.healthResponse:
    properties:
      message:
        example: ok
        type: string
    type: object
  controllers.successResponse:
    properties:
      message:
        example: category created successfully
        type: string
      success:
        example: true
        type: boolean
    type: object
  models.Category:
    properties:
      id:
        type: integer
      name:
        type: string
    type: object
host: localhost:8080
info:
  contact:
    email: jaybhogayata53@gmail.com
    name: Jay Bhogayata
  description: This is a sample server for product-service.
  termsOfService: https://github.com/jay-bhogayata/product-service
  title: product-service API
  version: 0.0.1
paths:
  /category:
    get:
      consumes:
      - n/a
      description: Get available categories
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Category'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controllers.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.errorResponse'
      security:
      - BearerToken: []
      summary: Get available categories
      tags:
      - category
    post:
      consumes:
      - application/json
      description: Create category
      parameters:
      - description: category
        in: body
        name: category
        required: true
        schema:
          $ref: '#/definitions/controllers.category'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/controllers.successResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controllers.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.errorResponse'
      security:
      - BearerToken: []
      summary: Create category
      tags:
      - category
  /category/{id}:
    delete:
      consumes:
      - n/a
      description: Delete category
      parameters:
      - description: category id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controllers.successResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controllers.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.errorResponse'
      security:
      - BearerToken: []
      summary: Delete category
      tags:
      - category
    get:
      consumes:
      - n/a
      description: Get category by id
      parameters:
      - description: category id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Category'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controllers.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.errorResponse'
      security:
      - BearerToken: []
      summary: Get category by id
      tags:
      - category
    put:
      consumes:
      - application/json
      description: Edit category
      parameters:
      - description: category id
        in: path
        name: id
        required: true
        type: integer
      - description: category
        in: body
        name: category
        required: true
        schema:
          $ref: '#/definitions/controllers.category'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controllers.successResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controllers.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.errorResponse'
      security:
      - BearerToken: []
      summary: Edit category
      tags:
      - category
  /health:
    get:
      description: Health check endpoint
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controllers.healthResponse'
      summary: Health check endpoint
      tags:
      - health
schemes:
- http
securityDefinitions:
  BearerToken:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
